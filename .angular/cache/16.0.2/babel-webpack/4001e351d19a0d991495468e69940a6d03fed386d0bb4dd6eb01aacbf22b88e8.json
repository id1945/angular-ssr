{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nfunction FormErrorsComponent_p_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 1);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const error_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", error_r1, \"\\n\");\n  }\n}\nclass FormErrorsComponent {\n  constructor(form) {\n    this.form = form;\n    this.messages = {};\n  }\n  get errors() {\n    if (!this.controlName) {\n      return [];\n    }\n    const control = this.form.control.get(this.controlName);\n    if (!control || !control.errors || !control.touched) {\n      return [];\n    }\n    return Object.keys(control.errors).map(errorCode => {\n      return this.messages[errorCode];\n    });\n  }\n}\nFormErrorsComponent.ɵfac = function FormErrorsComponent_Factory(t) {\n  return new (t || FormErrorsComponent)(i0.ɵɵdirectiveInject(i1.FormGroupDirective));\n};\nFormErrorsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: FormErrorsComponent,\n  selectors: [[\"bm-form-errors\"]],\n  inputs: {\n    controlName: \"controlName\",\n    messages: \"messages\"\n  },\n  decls: 1,\n  vars: 1,\n  consts: [[\"class\", \"error\", 4, \"ngFor\", \"ngForOf\"], [1, \"error\"]],\n  template: function FormErrorsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, FormErrorsComponent_p_0_Template, 2, 1, \"p\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngForOf\", ctx.errors);\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { FormErrorsComponent };","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","error_r1","FormErrorsComponent","constructor","form","messages","errors","controlName","control","get","touched","Object","keys","map","errorCode","ɵɵdirectiveInject","i1","FormGroupDirective","selectors","inputs","decls","vars","consts","template","FormErrorsComponent_Template","rf","ctx","ɵɵtemplate","FormErrorsComponent_p_0_Template","ɵɵproperty"],"sources":["C:\\Users\\duong\\Downloads\\16f-ssr\\src\\app\\admin\\form-errors\\form-errors.component.ts","C:\\Users\\duong\\Downloads\\16f-ssr\\src\\app\\admin\\form-errors\\form-errors.component.html"],"sourcesContent":["import { Component, Input } from '@angular/core';\r\nimport { FormGroupDirective } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'bm-form-errors',\r\n  templateUrl: './form-errors.component.html',\r\n  styleUrls: ['./form-errors.component.css'],\r\n})\r\nexport class FormErrorsComponent {\r\n  @Input() controlName?: string;\r\n  @Input() messages: { [errorCode: string]: string } = {};\r\n\r\n  constructor(private form: FormGroupDirective) {}\r\n\r\n  get errors(): string[] {\r\n    if (!this.controlName) {\r\n      return [];\r\n    }\r\n\r\n    const control = this.form.control.get(this.controlName);\r\n\r\n    if (!control || !control.errors || !control.touched) {\r\n      return [];\r\n    }\r\n\r\n    return Object.keys(control.errors).map(errorCode => {\r\n      return this.messages[errorCode];\r\n    });\r\n  }\r\n}\r\n","<p class=\"error\" *ngFor=\"let error of errors\">\r\n  {{ error }}\r\n</p>\r\n"],"mappings":";;;;ICAAA,EAAA,CAAAC,cAAA,WAA8C;IAC5CD,EAAA,CAAAE,MAAA,GACF;IAAAF,EAAA,CAAAG,YAAA,EAAI;;;;IADFH,EAAA,CAAAI,SAAA,GACF;IADEJ,EAAA,CAAAK,kBAAA,MAAAC,QAAA,OACF;;;ADCA,MAKaC,mBAAmB;EAI9BC,YAAoBC,IAAwB;IAAxB,KAAAA,IAAI,GAAJA,IAAI;IAFf,KAAAC,QAAQ,GAAoC,EAAE;EAER;EAE/C,IAAIC,MAAMA,CAAA;IACR,IAAI,CAAC,IAAI,CAACC,WAAW,EAAE;MACrB,OAAO,EAAE;;IAGX,MAAMC,OAAO,GAAG,IAAI,CAACJ,IAAI,CAACI,OAAO,CAACC,GAAG,CAAC,IAAI,CAACF,WAAW,CAAC;IAEvD,IAAI,CAACC,OAAO,IAAI,CAACA,OAAO,CAACF,MAAM,IAAI,CAACE,OAAO,CAACE,OAAO,EAAE;MACnD,OAAO,EAAE;;IAGX,OAAOC,MAAM,CAACC,IAAI,CAACJ,OAAO,CAACF,MAAM,CAAC,CAACO,GAAG,CAACC,SAAS,IAAG;MACjD,OAAO,IAAI,CAACT,QAAQ,CAACS,SAAS,CAAC;IACjC,CAAC,CAAC;EACJ;;AApBWZ,mBAAmB,C;mBAAnBA,mBAAmB,EAAAP,EAAA,CAAAoB,iBAAA,CAAAC,EAAA,CAAAC,kBAAA;AAAA;AAAnBf,mBAAmB,C;QAAnBA,mBAAmB;EAAAgB,SAAA;EAAAC,MAAA;IAAAZ,WAAA;IAAAF,QAAA;EAAA;EAAAe,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,6BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCRhC9B,EAAA,CAAAgC,UAAA,IAAAC,gCAAA,eAEI;;;MAF+BjC,EAAA,CAAAkC,UAAA,YAAAH,GAAA,CAAApB,MAAA,CAAS;;;;;SDQ/BJ,mBAAmB"},"metadata":{},"sourceType":"module","externalDependencies":[]}